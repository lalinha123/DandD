// ENTER
const id = req.params.id;
    const party = getPartyData(id);
    const link = getLinkData(id, req.session.userid);

    const renderJoinPage = (member) =>  res.render(
        path.join(__dirname, "..", "views", "parties_files", `joinparty.ejs`),
        { user: req.session.user, party: party, member: member, msg: null }
    );

    const renderEnterPage = () => {
        res.render(`parties_files/${id}`,
            {
                user: req.session.user,
                userrole: link.userrole,
                party: party
            }
        );
    }

    if (req.session.currentpass) {
        renderEnterPage();
    }

    else {
        checkLoginData(req, res, party,
            () => {},
            () => {
                if (party.password) {
                    if (!link) renderJoinPage(false);
                    else if (link.userrole !== 'master') renderJoinPage(true);
                    else {
                        req.session.currentpass = link.linkid;
                        renderEnterPage();
                    }
                }
    
                else {
                    if (link) {
                        req.session.currentpass = link.linkid;
                        renderEnterPage();
                    }
                    
                    else req.session.user ? renderJoinPage(true) : res.redirect('/login');
                }
            }
        );
    }


// JOIN
const id = req.params.id;
    const party = getPartyData(id);
    const link = getLinkData(id, req.session.userid);
    const password = req.body.password;

    const linkid_ = db.prepare('SELECT linkid FROM links ORDER BY linkid DESC LIMIT 1').get();
    const linkid = createId(Number(linkid_.linkid) + 1 || 1, 9);

    const render = () => res.redirect(`/parties/${id}`);

    const createLink = () => {
        const userrole = 'player only';

        db.prepare(
            `INSERT INTO links (linkid, userid, partyid, userrole) ` + 
            `VALUES (?, ?, ?, ?)`
        ).run(linkid, req.session.userid, id, userrole);

        req.session.currentpass = linkid;
               
        render();
    }

    checkLoginData(req, res, party,
        () => {},
        () => {
            if (party.password) {
                if (password === party.password) {
                    link ? render() : createLink();
                }
    
                else {
                    const msg = password ? 'Uh oh! Wrong password!' : 'Pls insert the password';
                    const member = link ? true : false;
    
                    res.render(
                        path.join(__dirname, "..", "views", "parties_files", `joinparty.ejs`),
                        { user: req.session.user, party: party, member: member, msg: msg }
                    );
                }
            }

            else {
                console.log('no password');
                link ? render() : createLink();
            }
        }
    );